$headerHeight: 100px;
$compositionHeight: 130px;
$compositionWidth: 300px;

.container {
  height: 100%;
  overflow: hidden;
  position: relative;
}

.header {
  align-items: center;
  background-color: rgba(255, 255, 255, 0.7);
  display: flex;
  flex-direction: row;
  height: $headerHeight;
  left: 0;
  padding: 0 40px;
  position: absolute;
  right: 0;
  top: 0;
  z-index: 2;
}

.emptyComposition {
  background-color: var(--color-elevation-1);
  border-radius: 4px;
  box-shadow: var(--shadow-elevation-1);
  cursor: not-allowed;
  height: $compositionHeight;
  width: $compositionWidth;
}

.composition {
  box-sizing: border-box;
  height: $compositionHeight;
  width: $compositionWidth;
}

.compositionList {
  align-items: center;
  display: flex;
  flex-direction: column;
  padding: $headerHeight + 10px 10px 0;
}

.compositionListInner {
  display: grid;
  gap: 10px;
  grid-template-columns: repeat(auto-fill, $compositionWidth);
  width: 100%;
}

.header {
  color: var(--color-primary);
}

.shadowBox {
  bottom: 0;
  box-shadow: inset var(--shadow-elevation-3);
  left: 0;
  pointer-events: none;
  position: absolute;
  right: 0;
  top: $headerHeight;
  z-index: 1;
}

@supports ((-webkit-backdrop-filter: blur(20px)) or (backdrop-filter: blur(20px))) {
  .header {
    backdrop-filter: blur(20px);
  }
}

@media (prefers-color-scheme: dark) {
  .header {
    background-color: var(--color-elevation-3);
    color: var(--color-onBackgroundFaded);
  }

  @supports ((-webkit-backdrop-filter: blur(20px)) or (backdrop-filter: blur(20px))) {
    .header {
      background-color: rgba(var(--color-canvasRGB), 0.7);
    }
  }
}
